{"version":3,"sources":["Static/NavBar.js","Static/ManageCampaigns.js","Dynamic/Campaigns/UpcomingCampaigns.js","Dynamic/Campaigns/LiveCampaigns.js","Dynamic/Campaigns/PastCampaigns.js","Dynamic/InternalTabs.js","PlayGround/Playground.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","navbar","background","height","topbar","padding","logoposition","left","marginTop","marginBottom","NavBar","classes","AppBar","position","className","Toolbar","IconButton","color","src","alt","width","ManageCampaigns","createData","name","calories","fat","carbs","protein","rows","table","minWidth","UpcomingCampaigns","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","component","scope","StyledTableCell","withStyles","head","backgroundColor","textTransform","fontStyle","fontSize","body","StyledTableRow","root","LiveCampaigns","Paper","aria-label","palette","common","black","white","action","hover","PastCampaigns","align","InternalTabs","React","useState","selectedTab","setSelectedTab","tabStyle","fontWeight","Tabs","value","onChange","event","newValue","TabIndicatorProps","style","Tab","label","Playground","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d72a253.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({    \r\n  navbar: {\r\n    background: \"#1F2640\",\r\n    height: \"80px\",\r\n  },\r\n  topbar: {\r\n    padding: \"0px\",\r\n  },\r\n  logoposition: {\r\n    left: \"182px\",\r\n    marginTop: \"17px\",\r\n    marginBottom: \"18px\",\r\n    padding: \"0px\",\r\n  },\r\n}));\r\n\r\nfunction NavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.navbar} >\r\n      <Toolbar className={classes.topbar}>\r\n        <IconButton            \r\n          color=\"inherit\"\r\n          className={classes.logoposition}\r\n        >            \r\n          <img src=\"https://cdn-www.bluestacks.com/bs-images/bs-logo-new.png\" alt=\"Bluestacks\" width=\"147\" height=\"45\" />\r\n        </IconButton>        \r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './ManageCampaigns.css';\r\n\r\nfunction ManageCampaigns() {\r\n  return (\r\n    <div className=\"ManageCampaignsContainer\">\r\n      <h1 className=\"ManageCampaignsContent\" >\r\n          Manage Campaigns\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageCampaigns;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function UpcomingCampaigns() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.table} >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert</TableCell>\r\n            <TableCell>Calories</TableCell>\r\n            <TableCell>Fat</TableCell>\r\n            <TableCell>Carbs</TableCell>\r\n            <TableCell>Protein</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>{row.calories}</TableCell>\r\n              <TableCell>{row.fat}</TableCell>\r\n              <TableCell>{row.carbs}</TableCell>\r\n              <TableCell>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#F1F1F4\",\r\n    color: \"#556789\",\r\n    textTransform: \"uppercase\",\r\n    fontStyle: \"Medium\",\r\n    fontSize: \"16px\",\r\n    // fontFamily: \"Roboto\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n    //   backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function LiveCampaigns() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell>Calories</StyledTableCell>\r\n            <StyledTableCell>Fat</StyledTableCell>\r\n            <StyledTableCell>Carbs</StyledTableCell>\r\n            <StyledTableCell>Protein</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell>{row.calories}</StyledTableCell>\r\n              <StyledTableCell>{row.fat}</StyledTableCell>\r\n              <StyledTableCell>{row.carbs}</StyledTableCell>\r\n              <StyledTableCell>{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function PastCampaigns() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './InternalTabs.css';\r\nimport { Tabs, Tab} from '@material-ui/core' ;\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport UpcomingCampaigns from './Campaigns/UpcomingCampaigns' ;\r\nimport LiveCampaigns from './Campaigns/LiveCampaigns' ;\r\nimport PastCampaigns from './Campaigns/PastCampaigns' ;\r\n\r\nconst InternalTabs = () => {\r\n    const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };     \r\n\r\n    const useStyles = makeStyles((theme) => ({        \r\n        tabStyle: {\r\n            textTransform: \"none\", \r\n            fontSize: 18, \r\n            fontWeight: 500,\r\n        },        \r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"InternalTabs\">  \r\n            <Tabs \r\n                value={selectedTab} \r\n                onChange={handleChange}                 \r\n                TabIndicatorProps={{\r\n                    style: {\r\n                        backgroundColor: \"#83A515\",\r\n                        height: \"4px\",\r\n                    }\r\n                }} \r\n                         \r\n            >\r\n                <Tab label=\"Upcoming Campaigns\"  className={classes.tabStyle} />\r\n                <Tab label=\"Live Campaigns\"   className={classes.tabStyle} />\r\n                <Tab label=\"Past Campaigns\"  className={classes.tabStyle} />                \r\n            </Tabs>\r\n            { selectedTab === 0 && <UpcomingCampaigns /> }\r\n            { selectedTab === 1 && <LiveCampaigns /> }\r\n            { selectedTab === 2 && <PastCampaigns /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InternalTabs;\r\n","import React from 'react';\r\nimport NavBar from '../Static/NavBar' ;\r\nimport ManageCampaigns from '../Static/ManageCampaigns' ;\r\nimport InternalTabs from '../Dynamic/InternalTabs' ;\r\nimport './Playground.css' ;\r\n// import CampaignDate from '../Dynamic/CampaignRow/CampaignDate' ;\r\n\r\nfunction Playground() {\r\n  // let today = new Date() ;\r\n  return (\r\n    <div className=\"Playground\">\r\n      <NavBar />    \r\n      <div className =\"InnerContent\">\r\n        <ManageCampaigns /> \r\n        <InternalTabs />\r\n      </div> \r\n      {/* <CampaignDate date={\"Oct 8 2019\"} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playground;\r\n","import React from 'react';\nimport './App.css';\nimport Playground from './PlayGround/Playground';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Playground />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}